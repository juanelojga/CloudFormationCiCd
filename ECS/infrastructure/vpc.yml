AWSTemplateFormatVersion: "2010-09-09"
Description: Creates VPC infrastructure

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name - dev or prod
    AllowedValues: [dev, prod]
    ConstraintDescription: Specify either dev or prod
  TagPrefix:
    Type: String
    Description: Enter Prefix that should be used for Tags.
  VPCCIDR:
    Type: String
    Description: CIDR block should be used to create the VPC (e.g. 172.21.1.0/24)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.0/24)
  PublicSubnet1:
    Type: String
    Description: CIDR block should be used to create the public subnet in AZ1 (e.g. 172.21.1.0/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.0/26)
  PublicSubnet2:
    Type: String
    Description: CIDR block should be used to create the public subnet in AZ1 (e.g. 172.21.1.64/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.64/26)

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref TagPrefix
  PubSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet1
      AvailabilityZone: !Sub ${AWS::Region}a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-${EnvironmentName}-PublicSubnet1
  PubSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet2
      AvailabilityZone: !Sub ${AWS::Region}b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-${EnvironmentName}-PublicSubnet2
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-${EnvironmentName}-IGW
  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-${EnvironmentName}-PublicRouteTable
  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: [GatewayToInternet, PublicRouteTable]
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PubSubnet1RTAssoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: [PublicRouteTable, PubSubnet1]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PubSubnet1
  PubSubnet2RTAssoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: [PublicRouteTable, PubSubnet2]
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PubSubnet2
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub ${TagPrefix}-${EnvironmentName}-SG
      GroupDescription: !Sub ${TagPrefix} - ALB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${TagPrefix}-${EnvironmentName}
      VpcId: !Ref VPC

Outputs:
  VPCID:
    Description: "VPC ID"
    Value: !Ref VPC
  PublicSubnet1:
    Description: "Subnet ID of public subnet in AZ1"
    Value: !Ref PubSubnet1
  PublicSubnet2:
    Description: "Subnet ID of public subnet in AZ2"
    Value: !Ref PubSubnet2
  SecurityGroupName:
    Description: "Security Group Name"
    Value: !Ref ALBSecurityGroup
  SecurityGroupId:
    Description: "Security Group Id"
    Value: !GetAtt ALBSecurityGroup.GroupId
